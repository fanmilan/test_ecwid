{"version":3,"sources":["redux/types/gallery.ts","common/components/Page/Page.tsx","redux/reducers/gallery.tsx","redux/types/error.ts","redux/reducers/error.ts","redux/reducers/index.ts","redux/store/store.tsx","redux/actions/error.ts","redux/actions/gallery.ts","common/components/Button/Button.tsx","components/DragAndDrop/DragAndDrop.tsx","common/components/InputUrl/InputUrl.tsx","components/UploadByLink/UploadByLink.tsx","components/Error/Error.tsx","components/UploadField/UploadField.tsx","components/GalleryItem/GalleryItem.tsx","components/Gallery/Gallery.tsx","App.tsx","index.tsx"],"names":["Constants","Page","name","children","className","Header","title","memo","Main","PARAMS","initialState","width","images","compareSizesPlaceholderAndImg","image","newImage","height","sizeInGallery","calcGallery","sumRatio","newImages","ratioArr","map","item","keys","baseHeight","margin","prevHRow","ratio","i","push","hRow","Math","round","length","lastIteration","abs","pop","sumW","forEach","keyIndex","key","picW","marginRight","marginTop","error","rootReducer","combineReducers","gallery","state","action","type","CHANGE_WIDTH","payload","CALC_GALLERY","console","log","ADD_IMAGE_REQUEST","ADD_MASSIVE_IMAGE_REQUEST","ADD_IMAGE","newImageForAdd","index","findIndex","id","shouldCalcG","DELETE_IMAGE","filter","ADD_ERROR","REMOVE_ERROR","errorWithRemove","shift","store","createStore","applyMiddleware","thunk","addNewError","text","dispatch","addError","setTimeout","addImageRequest","addImageFromLink","image_url","uniqid","url","isLoading","waitImageLoad","Image","src","onload","addImage","addImageFromJson","result","galleryImages","addMassiveImageRequest","uploadFromLink","json_link","match","fetch","then","res","ok","Error","json","catch","uploadImageFromLocale","files","URL","createObjectURL","reader","FileReader","JSON","parse","e","readAsText","Button","onClick","DragAndDrop","useState","dragging","setDragging","useDispatch","dragNDropRef","useRef","inputFileRef","useEffect","dragNDropEl","current","dragCounter","handleDragIn","preventDefault","stopPropagation","dataTransfer","items","handleDragOut","handleDrag","handleDrop","clearData","addEventListener","removeEventListener","ref","click","onChange","target","value","InputUrl","React","forwardRef","placeholder","UploadByLink","linkRef","linkValue","trim","useSelector","ErrorItem","UploadField","GalleryItem","data-id","style","alt","Gallery","galleryRef","changeWidthListener","changeWidthAction","window","el","clientWidth","changeWidth","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9884ea64.chunk.js","sourcesContent":["import {addImage, deleteImage, addImageRequest, addMassiveImageRequest, changeWidth, calcGallery} from '../actions/gallery';\r\nimport {ActionType} from \"typesafe-actions\";\r\n\r\nexport type galleryActionsT = ActionType<typeof addImage | typeof deleteImage | typeof addImageRequest | typeof addMassiveImageRequest | typeof changeWidth | typeof calcGallery>;\r\n\r\ntype imageJsonT = {\r\n    url: string,\r\n    width: number,\r\n    height: number,\r\n}\r\n\r\nexport type imageT = {\r\n    id: string,\r\n    url: string,\r\n    width: number,\r\n    height: number,\r\n    sizeInGallery?: {width: number, height: number, marginRight: number, marginTop: number},\r\n    isLoading: boolean\r\n}\r\n\r\nexport type galleryStateT = {\r\n    width: number,\r\n    images: Array<imageT>\r\n}\r\n\r\nexport enum Constants {\r\n    ADD_IMAGE_REQUEST = 'ADD_IMAGE_REQUEST',\r\n    ADD_MASSIVE_IMAGE_REQUEST = 'ADD_MASSIVE_IMAGE_REQUEST',\r\n    ADD_IMAGE = 'ADD_IMAGE',\r\n    DELETE_IMAGE = 'DELETE_IMAGE',\r\n    CALC_GALLERY = 'CALC_GALLERY',\r\n    CHANGE_WIDTH = 'CHANGE_WIDTH'\r\n}\r\n\r\nexport type jsonFormatT = {\r\n    galleryImages: Array<imageJsonT>\r\n}","import './Page.scss';\r\nimport {memo} from \"react\";\r\n\r\n\r\ntype pageP = {\r\n    name: string,\r\n    children: React.ReactNode\r\n}\r\n\r\nexport const Page = ({name, children}: pageP) => {\r\n    return <div className={'page'}>\r\n        <div className=\"page__inside\">\r\n            <Header title={name}/>\r\n            <Main>\r\n                {children}\r\n            </Main>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\ntype headerProps = {\r\n    title: string\r\n}\r\n\r\nconst Header = memo(({title}: headerProps) => <header className={'header'}>\r\n    <h1 className=\"header__title\">{title}</h1>\r\n</header>);\r\n\r\n\r\ntype mainP = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Main = ({children} : mainP) => <div className={'main'}>\r\n    {children}\r\n</div>;\r\n","import {Constants, galleryActionsT, galleryStateT, imageT} from \"../types/gallery\";\r\n\r\nconst PARAMS = {\r\n    BASE_HEIGHT: 180,\r\n    MARGIN: 3\r\n}\r\n\r\n\r\nconst initialState: galleryStateT = {\r\n    width: 860,\r\n    images: []\r\n}\r\n\r\n\r\nexport const galleryReducer = (state: galleryStateT = initialState, action: galleryActionsT): galleryStateT => {\r\n    switch (action.type) {\r\n        case Constants.CHANGE_WIDTH:\r\n            return {\r\n                ...state,\r\n                width: action.payload.width,\r\n                images: calcGallery(state.images, action.payload.width)\r\n            }\r\n        case Constants.CALC_GALLERY:\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                images: calcGallery(state.images, action.payload.width)\r\n            }\r\n        case Constants.ADD_IMAGE_REQUEST:\r\n            //placeholder\r\n            return {\r\n                ...state,\r\n                images: calcGallery([...state.images, action.payload.image], state.width)\r\n            }\r\n        case Constants.ADD_MASSIVE_IMAGE_REQUEST:\r\n            //placeholder\r\n            return {\r\n                ...state,\r\n                images: calcGallery([...state.images, ...action.payload.images], state.width)\r\n            }\r\n        case Constants.ADD_IMAGE:\r\n            let image = action.payload.image;\r\n            let newImageForAdd = [...state.images];\r\n            let index = newImageForAdd.findIndex((item) => item.id === image.id);\r\n\r\n            if (index !== -1) {\r\n                const shouldCalcG = !(compareSizesPlaceholderAndImg(newImageForAdd[index], image));\r\n                newImageForAdd[index] = image;\r\n                if (shouldCalcG) {\r\n                    calcGallery(newImageForAdd, state.width);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                images: newImageForAdd\r\n            }\r\n\r\n        case Constants.DELETE_IMAGE:\r\n            return {\r\n                ...state,\r\n                images: calcGallery([...state.images].filter((item) => item.id !== action.payload.id), state.width)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst compareSizesPlaceholderAndImg = (image: imageT, newImage: imageT) => {\r\n    return image.width === newImage.width && image.height === newImage.height\r\n        && image.sizeInGallery && newImage.sizeInGallery &&\r\n        image.sizeInGallery.width === newImage.sizeInGallery.width &&\r\n        image.sizeInGallery.height === newImage.sizeInGallery.height;\r\n}\r\n\r\n\r\nfunction calcGallery(images: Array<imageT>, width: number) {\r\n\r\n    let sumRatio = 0;\r\n\r\n    const newImages = [...images];\r\n    let ratioArr = images.map((item: imageT) => item.width / item.height);\r\n\r\n    let keys: Array<[number, number]> = [];\r\n\r\n    let baseHeight = PARAMS.BASE_HEIGHT;\r\n    let margin = PARAMS.MARGIN;\r\n    let prevHRow = 0;\r\n\r\n    for (let i = 0; i < ratioArr.length; i++) {\r\n        let ratio = ratioArr[i];\r\n        keys.push([i, ratio]);\r\n        sumRatio += ratio;\r\n\r\n        let hRow = Math.round((width - (keys.length - 1) * margin) / sumRatio);\r\n\r\n        let lastIteration = (i === ratioArr.length - 1);\r\n\r\n        /* last row is special case */\r\n        if (hRow > baseHeight && !(lastIteration && hRow < baseHeight * 1.5)) {\r\n            prevHRow = hRow;\r\n        } else {\r\n\r\n            /*\r\n            *   Compare Two Heights Of Row : 1 - less than baseH, 2 - more than baseH\r\n            *   Take closest one\r\n            *  */\r\n\r\n            if (prevHRow > 0  && Math.abs(hRow - baseHeight) > Math.abs(prevHRow - baseHeight)) {\r\n                hRow = prevHRow;\r\n                i--;\r\n                keys.pop();\r\n            }\r\n\r\n            let sumW = 0;\r\n            keys.forEach(([key, ratio], keyIndex) => {\r\n                let picW = 0;\r\n                let marginRight = margin;\r\n                if (keyIndex === keys.length - 1) {\r\n                    picW = width - sumW - (keys.length - 1) * margin;\r\n                    marginRight = 0;\r\n                } else {\r\n                    picW = Math.round(hRow * ratio);\r\n                    sumW += picW;\r\n                }\r\n\r\n                newImages[key].sizeInGallery = {\r\n                    height: hRow,\r\n                    width: picW,\r\n                    marginRight: marginRight,\r\n                    marginTop: margin\r\n                };\r\n            });\r\n            sumRatio = 0;\r\n            keys = [];\r\n            prevHRow = 0;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //LastRow and not Stretch\r\n    if (sumRatio > 0) {\r\n        keys.forEach(([key, ratio]) => {\r\n            let picW = Math.round(baseHeight * ratio)\r\n\r\n            newImages[key].sizeInGallery = {\r\n                height: baseHeight,\r\n                width: picW,\r\n                marginRight: margin,\r\n                marginTop: margin\r\n            };\r\n        });\r\n    }\r\n\r\n    return newImages;\r\n}\r\n","import {addError, removeError} from '../actions/error';\r\nimport {ActionType} from \"typesafe-actions\";\r\n\r\nexport type errorActionsT = ActionType<typeof addError | typeof removeError>;\r\n\r\n\r\nexport type errorT = {\r\n    text: string\r\n}\r\n\r\nexport type errorStateT = {\r\n    error: Array<errorT>,\r\n}\r\n\r\nexport enum Constants {\r\n    ADD_ERROR = 'ADD_ERROR',\r\n    REMOVE_ERROR = 'REMOVE_ERROR',\r\n}\r\n","import {Constants, errorActionsT, errorStateT} from \"../types/error\";\r\n\r\nconst initialState: errorStateT = {\r\n    error: []\r\n}\r\n\r\nexport const errorReducer = (state: errorStateT = initialState, action: errorActionsT) => {\r\n    switch (action.type){\r\n        case Constants.ADD_ERROR:\r\n            return {\r\n                ...state,\r\n                error: [...state.error, action.payload]\r\n            }\r\n        case Constants.REMOVE_ERROR:\r\n            let errorWithRemove = [...state.error];\r\n            errorWithRemove.shift();\r\n            return {\r\n                ...state,\r\n                error: errorWithRemove\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {galleryReducer} from \"./gallery\";\r\nimport {errorReducer} from \"./error\";\r\n\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    gallery: galleryReducer,\r\n    error: errorReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers';\r\nimport thunk from 'redux-thunk'\r\nimport {galleryStateT} from \"../types/gallery\";\r\nimport {errorStateT} from \"../types/error\";\r\n\r\nexport type rootStateT = {\r\n    gallery: galleryStateT,\r\n    error: errorStateT\r\n}\r\n\r\nexport const store = createStore<rootStateT, any, any, any>(rootReducer, applyMiddleware(thunk));","import {action} from \"typesafe-actions\";\r\nimport {Constants, errorActionsT} from \"../types/error\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {rootStateT} from \"../store/store\";\r\n\r\nexport const addError = (text: string) => action(Constants.ADD_ERROR, {text: text});\r\nexport const removeError = () => action(Constants.REMOVE_ERROR);\r\n\r\ntype ThunkActionT = ThunkAction<void, rootStateT, unknown, errorActionsT>;\r\n\r\nexport const addNewError = (text: string): ThunkActionT => (dispatch) => {\r\n    dispatch(addError(text));\r\n    setTimeout(() => {\r\n        dispatch(removeError());\r\n    }, 5000);\r\n};","import {Constants, galleryActionsT, imageT, jsonFormatT} from \"../types/gallery\";\r\nimport { action } from 'typesafe-actions';\r\nimport {addNewError} from \"./error\";\r\nimport uniqid from 'uniqid';\r\n\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {rootStateT} from \"../store/store\";\r\n\r\n\r\n\r\nexport const changeWidth = (width: number) => action(Constants.CHANGE_WIDTH, {width: width});\r\nexport const calcGallery = (width: number) => action(Constants.CALC_GALLERY, {width: width});\r\nexport const addImage = (image: imageT) => action(Constants.ADD_IMAGE, {image});\r\nexport const deleteImage = (id: string) => action(Constants.DELETE_IMAGE, {id});\r\nexport const addImageRequest = (image: imageT) => action(Constants.ADD_IMAGE_REQUEST, {image});\r\nexport const addMassiveImageRequest = (images: Array<imageT>) => action(Constants.ADD_MASSIVE_IMAGE_REQUEST, {images});\r\n\r\n\r\ntype ThunkActionT = ThunkAction<void, rootStateT, unknown, galleryActionsT>;\r\n\r\n\r\nconst addImageFromLink = (image_url: string, width:number = 300, height:number = 300): ThunkActionT  => (dispatch) => {\r\n   // const image_id = state.gallery.images.reduce((max: number, item: imageT) => (item.id > max) ? item.id : max, 0) + 1;\r\n    const newImage = {\r\n        id: uniqid(),\r\n        url: image_url,\r\n        isLoading: true,\r\n        width: width,\r\n        height: height\r\n    }\r\n\r\n    dispatch(addImageRequest(newImage));\r\n\r\n    dispatch(waitImageLoad(newImage));\r\n}\r\n\r\n\r\nconst waitImageLoad = (image: imageT) : ThunkActionT => (dispatch) => {\r\n    const newImage = new Image();\r\n    newImage.src = image.url;\r\n    newImage.onload = () => {\r\n        dispatch(addImage({...image, height: newImage.height, width: newImage.width, isLoading: false}))\r\n    }\r\n}\r\n\r\nconst addImageFromJson = (result: jsonFormatT): ThunkActionT => (dispatch) => {\r\n    if (result.galleryImages) {\r\n        const images = result.galleryImages.map((item)=> ({...item, id: uniqid(), isLoading:true}));\r\n\r\n        dispatch(addMassiveImageRequest(images));\r\n\r\n        images.forEach((item) => {\r\n            dispatch(waitImageLoad(item));\r\n        });\r\n    } else {\r\n        dispatch(addNewError('Некорректный формат JSON.'));\r\n    }\r\n}\r\n\r\n\r\nconst uploadImageFromJSON = (json_link: string): ThunkActionT => (dispatch) => {\r\n    fetch(json_link)\r\n        .then((res) => {\r\n            if (!res.ok) throw new Error('not OK');\r\n            return res.json();\r\n        }).then((result: jsonFormatT) => {\r\n            dispatch(addImageFromJson(result));\r\n        }).catch((error) => {\r\n            dispatch(addNewError(`Ошибка получения файла. ${error}`));\r\n        });\r\n}\r\n\r\nexport const uploadFromLink = (url: string): ThunkActionT => (dispatch) => {\r\n    if (url.match(/\\.(jpeg|jpg|gif|png)$/) !== null) {\r\n        dispatch(addImageFromLink(url));\r\n    } else if (url.match(/\\.(json)$/) !== null) {\r\n        dispatch(uploadImageFromJSON(url))\r\n    } else {\r\n        dispatch(addNewError('Недопустимый формат файла. Допустимые форматы: jpg, json, gif, png.'));\r\n    }\r\n}\r\n\r\nexport const uploadImageFromLocale = (files: FileList): ThunkActionT => (dispatch) => {\r\n    for (let i = 0; i < files.length; i++) {\r\n        switch (files[i].type) {\r\n            case 'image/jpeg':\r\n            case 'image/gif':\r\n            case 'image/png':\r\n                dispatch(addImageFromLink(URL.createObjectURL(files[i])));\r\n                break;\r\n            case 'application/json':\r\n                let reader = new FileReader();\r\n                reader.onload = ( () => {\r\n                        try {\r\n                            let result = JSON.parse(reader.result as string);\r\n                            dispatch(addImageFromJson(result));\r\n                        } catch (e) {\r\n                            dispatch(addNewError(`Ошибка чтения файла. ${e}`));\r\n                        }\r\n                });\r\n                reader.readAsText(files[i]);\r\n\r\n               // dispatch(addImageFromJSON(URL.createObjectURL(files[i])));\r\n                break;\r\n            default:\r\n                dispatch(addNewError('Недопустимый формат файла. Допустимые форматы: jpg, json, gif, png.'));\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './Button.scss';\r\nimport { MouseEvent } from 'react';\r\n\r\ntype buttonT = {\r\n    className?: string,\r\n    onClick?: () => void,\r\n    name: string\r\n}\r\n\r\nexport const Button = ({className, onClick, name} : buttonT) => {\r\n\r\n    const handleClick = (e: MouseEvent<HTMLButtonElement>) => {\r\n        if (onClick) onClick();\r\n    }\r\n\r\n    return <button className={'btn '+ (className ? className : '')} onClick={handleClick}>{name}</button>\r\n}","import './DragAndDrop.scss';\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {uploadImageFromLocale} from \"../../redux/actions/gallery\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Button} from \"../../common/components/Button/Button\";\r\n\r\n\r\nexport const DragAndDrop = () => {\r\n\r\n    const [dragging, setDragging] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n    const dragNDropRef = useRef<HTMLDivElement>(null);\r\n    const inputFileRef = useRef<HTMLInputElement>(null);\r\n\r\n    const uploadFromLocal = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files;\r\n        if (files && files.length > 0) {\r\n            dispatch(uploadImageFromLocale(files));\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let dragNDropEl = dragNDropRef.current;\r\n\r\n        let dragCounter = 0;\r\n\r\n        const handleDragIn = (e: DragEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            dragCounter++;\r\n            if (e.dataTransfer && e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n                setDragging(true);\r\n            }\r\n        }\r\n\r\n        const handleDragOut = (e: DragEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            dragCounter--;\r\n            if (dragCounter === 0) setDragging(false);\r\n        }\r\n\r\n        const handleDrag = (e: DragEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        const handleDrop = (e: DragEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setDragging(false);\r\n            if (e.dataTransfer && e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                dispatch(uploadImageFromLocale(e.dataTransfer.files))\r\n                e.dataTransfer.clearData();\r\n            }\r\n            dragCounter = 0;\r\n        }\r\n\r\n        if (dragNDropEl) {\r\n            dragNDropEl.addEventListener('dragenter', handleDragIn);\r\n            dragNDropEl.addEventListener('dragleave', handleDragOut);\r\n            dragNDropEl.addEventListener('dragover', handleDrag);\r\n            dragNDropEl.addEventListener('drop', handleDrop);\r\n        }\r\n\r\n        return () => {\r\n            if (dragNDropEl) {\r\n                dragNDropEl.removeEventListener('dragenter', handleDragIn);\r\n                dragNDropEl.removeEventListener('dragleave', handleDragOut);\r\n                dragNDropEl.removeEventListener('dragover', handleDrag);\r\n                dragNDropEl.removeEventListener('drop', handleDrop);\r\n            }\r\n        }\r\n\r\n    }, [dispatch]);\r\n\r\n    return <div className={'drag-and-drop' + ((dragging) ? ' drag-and-drop_active' : '')} ref={dragNDropRef}>\r\n        <div className={'drag-and-drop__text'}>\r\n            Перетащить сюда файлы\r\n            <span className={'split-with-or'}>или</span>\r\n            <div className={'upload-file-locale'}>\r\n                <Button name={'Выбрать локально'} className={\"btn_upload\"}\r\n                        onClick={() => inputFileRef.current && inputFileRef.current.click()}/>\r\n                <input className={'file-input'} type={'file'} onChange={uploadFromLocal} ref={inputFileRef}/>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\n","import './InputUrl.scss';\r\n\r\nimport React from \"react\";\r\n\r\ntype inputTextP = {\r\n    name: string,\r\n    placeholder?: string\r\n}\r\n\r\nexport const InputUrl = React.forwardRef(({name, placeholder}: inputTextP, ref: any) => <input type={'text'} className={'input input_text'} name={name} placeholder={placeholder} ref={ref}/>);","import './UploadByLink.scss';\r\n\r\nimport {InputUrl} from \"../../common/components/InputUrl/InputUrl\";\r\nimport {Button} from \"../../common/components/Button/Button\";\r\nimport {useRef} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {uploadFromLink} from \"../../redux/actions/gallery\";\r\n\r\n\r\nexport const UploadByLink = () => {\r\n    const linkRef = useRef<HTMLInputElement>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploadFile = () => {\r\n        if (linkRef.current) {\r\n            let linkValue = linkRef.current.value.trim();\r\n            if (linkValue) dispatch(uploadFromLink(linkValue));\r\n            linkRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    return <div className={'upload-by-link'}>\r\n            <InputUrl name={'link'} placeholder={'Загрузить по ссылке...'} ref={linkRef}/>\r\n            <Button className={'btn_upload-link'} name={'Загрузить'} onClick={uploadFile}/>\r\n    </div>\r\n}","import './Error.scss';\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootStateT} from \"../../redux/store/store\";\r\nimport {errorT} from \"../../redux/types/error\";\r\n\r\n\r\nexport const Error = () => {\r\n    const error = useSelector((state: rootStateT)=>state.error.error);\r\n\r\n    return (error.length > 0) ? <div className={'error'}>\r\n            <h3 className=\"error__title\">Произошла ошибка</h3>\r\n            <ul className={'error__list'}>\r\n                {\r\n                    error.map((item, index) => <ErrorItem key={index} item={item}/>)\r\n                }\r\n            </ul>\r\n        </div> : null;\r\n}\r\n\r\ntype errorItemP = {\r\n    item: errorT\r\n}\r\n\r\nconst ErrorItem = ({item} : errorItemP) => {\r\n    return <li className={'error__item'}>{item.text}</li>\r\n}","import './UploadField.scss';\r\nimport {DragAndDrop} from \"../DragAndDrop/DragAndDrop\";\r\nimport {UploadByLink} from \"../UploadByLink/UploadByLink\";\r\nimport {Error} from '../Error/Error';\r\n\r\nexport const UploadField = () => {\r\n\r\n    return <div className={'upload-field'}>\r\n        <UploadByLink />\r\n        <div className={'split-with-or'}>ИЛИ</div>\r\n        <DragAndDrop />\r\n        <Error />\r\n    </div>\r\n}","import './GalleryItem.scss';\r\n\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteImage} from \"../../redux/actions/gallery\";\r\nimport {Button} from \"../../common/components/Button/Button\";\r\nimport {imageT} from \"../../redux/types/gallery\";\r\n\r\ntype galleryItemT = {\r\n    item: imageT\r\n}\r\n\r\nexport const GalleryItem = ({item}: galleryItemT) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    if (!item.sizeInGallery) return null;\r\n\r\n    return <article data-id={item.id} className={'gallery-item'} style={{height: item.sizeInGallery.height, width: item.sizeInGallery.width, marginRight: item.sizeInGallery.marginRight, marginTop: item.sizeInGallery.marginTop}}>\r\n        {\r\n            !item.isLoading &&\r\n            <>\r\n                <div className={'gallery-item__bar'}>\r\n                    <Button name='✕' className={'btn_small btn_bar'} onClick={() => dispatch(deleteImage(item.id))} />\r\n                </div>\r\n                <img className='gallery-item__img' src={item.url} alt={'Изображение галереи'}/>\r\n            </>\r\n        }\r\n\r\n    </article>\r\n}","import './Gallery.scss';\r\n\r\nimport {useEffect, useRef} from \"react\";\r\nimport {UploadField} from \"../UploadField/UploadField\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeWidth} from \"../../redux/actions/gallery\";\r\nimport {GalleryItem} from \"../GalleryItem/GalleryItem\";\r\nimport {rootStateT} from \"../../redux/store/store\";\r\nimport {imageT} from \"../../redux/types/gallery\";\r\n\r\n\r\nexport const Gallery = () => {\r\n\r\n    const galleryRef = useRef<HTMLDivElement>(null);\r\n\r\n    const {images} = useSelector((state: rootStateT) => {\r\n        return state.gallery;\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const changeWidthListener = () => {\r\n            changeWidthAction();\r\n        }\r\n        changeWidthAction();\r\n        window.addEventListener('resize', changeWidthListener);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', changeWidthListener);\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n\r\n    const changeWidthAction = ()=> {\r\n        let el = galleryRef.current;\r\n        if (el) {\r\n            const width = el.clientWidth;\r\n            dispatch(changeWidth(width));\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <UploadField />\r\n        <div className={'gallery'} ref={galleryRef}>\r\n            {\r\n                (images.length) ? (images.map((item: imageT) => <GalleryItem key={item.id} item={item}/>)) : <div className={'gallery__empty'}>Галерея пуста</div>\r\n            }\r\n        </div>\r\n    </>;\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Page} from \"./common/components/Page/Page\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store/store\";\nimport {Gallery} from \"./components/Gallery/Gallery\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n                <Page name={'Галерея изображений'}>\n                    <Gallery />\n                </Page>\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}